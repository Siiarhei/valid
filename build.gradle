
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ru.english'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	implementation 'org.liquibase:liquibase-core'

	// Обновленные версии MapStruct и Lombok

	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'
}

tasks.withType(JavaCompile) {
	// Указываем путь для сгенерированных файлов MapStruct
	options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")

	// Отключаем инкрементальную компиляцию
	options.incremental = false
}

sourceSets {
	// Добавляем сгенерированные файлы в исходный код
	main.java.srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
}

bootJar {
	// Отключаем упаковку файлов сгенерированных MapStruct в jar-файл
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
